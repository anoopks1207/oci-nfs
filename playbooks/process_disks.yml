- debug:
    var: blk_lst
- debug:
    var: blk_cnt
- name: set mount point name fs1
  ansible.builtin.set_fact:
    mount_point: "/mnt/{{ fs1_name }}"
    disk_name: disk1
  when:
    - fs_type == "Persistent"
    - use_non_uhp_fs1|bool == True

- name: set mount point name fs2
  ansible.builtin.set_fact:
    mount_point: "/mnt/{{ fs2_name }}"
    disk_name: disk2
  when:
    - fs_type == "Persistent"
    - use_non_uhp_fs2|bool == True

- name: set mount point name fs3
  ansible.builtin.set_fact:
    mount_point: "/mnt/{{ fs3_name }}"
    disk_name: disk3
  when:
    - fs_type == "Persistent"
    - use_non_uhp_fs3|bool == True

- block:
    - name: create volume group
      lvg:
        vg: vg_nfs_disk0
        pvs: "{{ blk_lst.stdout }}"

    - name: Create Logical volume
      lvol:
        vg: "vg_nfs_{{ disk_name }}"
        lv: "{{ disk_name }}"
        size: 100%FREE
        opts: -i "{{ blk_cnt.stdout }}" -I "{{ lvm_stripe_size }}"k
      ignore_errors: true
      when: blk_cnt.stdout|int > 1

    - name: Create Logical volume
      lvol:
        vg: "vg_nfs_{{ disk_name }}"
        lv: "{{ disk_name }}"
        size: 100%FREE
      ignore_errors: true
      when: blk_cnt.stdout|int == 1

 
    - name: Create file system
      filesystem:
        fstype: xfs
        dev: "/dev/vg_nfs_{{ disk_name }}/{{ disk_name }}"

    - name: Create mount point
      file:
        path: "{{ mount_point }}"
        state: directory
        mode: '0755'

    - name: run xfs_repair
      ansible.builtin.shell: xfs_repair "/dev/vg_nfs_{{ disk_name }}/{{ disk_name }}"

    - name: Mount filesystem
      mount:
        path: "{{ mount_point }}"
        src: "/dev/vg_nfs_{{ disk_name }}/{{ disk_name }}"
        fstype: xfs
        opts: defaults,_netdev,nofail,noatime,inode64,uquota,prjquota
        fstab: /tmp/fstab.dummy
        state: mounted

    - name: Unmount filesystem
      mount:
        path: "{{ mount_point }}"
        state: unmounted
      when: fs_ha|bool == true

    - name: Update fstab fopr for non HA depoyment
      lineinfile: path=/etc/fstab line={{lookup('file', '/tmp/fstab.dummy')}} create=yes state=present
      when: fs_ha|bool == false
  when:
    -  "'storage' in group_names"
    #- inventory_hostname == NODE1
