- hosts: quorum
  become: true
  pre_tasks:
   - setup:
      gather_subset:
        - '!all'
        - '!any'
        - 'network'
  tasks:
  - name: Disable SELinux
    selinux:
      state: disabled

  - name: stop firewalld
    ansible.builtin.include_role:
      name: firewall

  - name: Install packages
    ansible.builtin.include_role:
      name: packages

  - name: Configure corosync-qnetd
    ansible.builtin.include_role:
      name: quorum

- hosts: storage
  become: true
  pre_tasks:
   - setup:
      gather_subset:
        - '!all'
        - '!any'
        - 'network'
  tasks:
  - name: set facts
    ansible.builtin.set_fact:
      NODE1: "{{ storage_server_hostname_prefix }}1"
      NODE2: "{{ storage_server_hostname_prefix }}2"
      ha_config_dir: /home/opc/ha_config
      
  - name: Disable SELinux
    selinux:
      state: disabled

  - name: stop firewalld
    ansible.builtin.include_role:
      name: firewall

  - name: install packages
    ansible.builtin.include_role:
      name: packages

  - name: Configure Network
    ansible.builtin.include_role:
      name: network
    
  - name: Configure Storage
    ansible.builtin.include_role:
      name: storage

  - name: Configure corosync
    ansible.builtin.include_role:
      name: corosync

  - name: Restart cron
    ansible.builtin.include_role:
      name: cron

  - name: Configure cluster resorce files
    ansible.builtin.include_role:
      name: res_files
  

  # only for VMs - since they come up too quickly before stonith fencing completes.
  - name: add 30s delay for VM instances for corosync service
    lineinfile:
      path: /usr/lib/systemd/system/corosync.service
      insertbefore: 'ExecStart=/usr/share/corosync/corosync start'
      line: 'ExecStartPre=/bin/sleep 30'
      state: present
      create: no
    when: (fs_ha|bool and (not {{ storage_server_dual_nics }}))|default(false)|bool

  - name: Configure NFS
    ansible.builtin.include_role:
      name: nfs_server

  - name: Configure HA service
    ansible.builtin.include_role:
      name: pcs_cluster
    when: fs_ha|bool

- hosts: compute
  become: true
  pre_tasks:
   - setup:
      gather_subset:
        - '!all'
        - '!any'
        - 'network'
  tasks:
  - name: Disable SELinux
    selinux:
      state: disabled
      
  - name: stop firewalld
    ansible.builtin.include_role:
      name: firewall

  - name: install packages
    ansible.builtin.include_role:
      name: packages

  - name: create nfs_install_client.sh file
    template:
      src: _nfs_install_client.sh.j2
      dest: /home/opc/nfs_install_client.sh
  - name: execute nfs_install_client.sh
    command: bash -c "chmod +x /home/opc/*.sh ; sudo /home/opc/nfs_install_client.sh"
  - name: sleep for 60 seconds and continue with play
    wait_for:
      timeout: 60
    delegate_to: localhost

  - name: create nfs mount_point directory
    become: true
    file:
      path: "{{ mount_point }}"
      state: directory
    when: use_non_uhp_fs1|bool
  - name: Mount NFSv3
    mount:
      path: "{{ mount_point }}"
      src: "{{ nfs_server_ip }}:{{ fs1_dir }}/exports"
      fstype: nfs
      opts: vers=3,defaults,noatime,nodiratime,bg,timeo=100,ac,actimeo=120,nocto,rsize=1048576,wsize=1048576,nolock,local_lock=none,proto=tcp,sec=sys,_netdev
      state: mounted
    when: use_non_uhp_fs1|bool
  - name: set nfsshare permissions
    become: true
    file:
      path: "{{ mount_point }}"
      state: directory
      owner: opc
      group: opc
    async: 30
    poll: 0
    when: use_non_uhp_fs1|bool
  - name: create nfs mount_point directory
    become: true
    file:
      path: "{{ mount_point }}v4"
      state: directory
    when: use_non_uhp_fs1|bool
  - name: Mount NFSv4
    mount:
      path: "{{ mount_point }}v4"
      src: "{{ nfs_server_ip }}:{{ fs1_dir }}/exports"
      fstype: nfs
      opts: vers=4,defaults,noatime,nodiratime,bg,timeo=100,ac,actimeo=120,nocto,rsize=1048576,wsize=1048576,nolock,local_lock=none,proto=tcp,sec=sys,_netdev
      state: mounted
    when: use_non_uhp_fs1|bool
  - name: set nfsshare permissions
    become: true
    file:
      path: "{{ mount_point }}v4"
      state: directory
      owner: opc
      group: opc
    async: 30
    poll: 0
    when: use_non_uhp_fs1|bool

  - name: create nfs mount_point directory
    become: true
    file:
      path: "{{ mount_point }}/uhp"
      state: directory
    when: use_uhp|bool

  - name: Mount NFSv3
    mount:
      path: "{{ mount_point }}/uhp"
      src: "{{ nfs_server_ip }}:{{ fs0_dir }}/exports"
      fstype: nfs
      opts: vers=3,defaults,noatime,nodiratime,bg,timeo=100,ac,actimeo=120,nocto,rsize=1048576,wsize=1048576,nolock,local_lock=none,proto=tcp,sec=sys,_netdev
      state: mounted
    when: use_uhp|bool
  - name: set nfsshare permissions
    become: true
    file:
      path: "{{ mount_point }}/uhp"
      state: directory
      owner: opc
      group: opc
    async: 30
    poll: 0
    when: use_uhp|bool
  - name: create nfs mount_point directory
    become: true
    file:
      path: "{{ mount_point }}/uhp_v4"
      state: directory
    when: use_uhp|bool
  - name: Mount NFSv4
    mount:
      path: "{{ mount_point }}/uhp_v4"
      src: "{{ nfs_server_ip }}:{{ fs0_dir }}/exports"
      fstype: nfs
      opts: vers=4,defaults,noatime,nodiratime,bg,timeo=100,ac,actimeo=120,nocto,rsize=1048576,wsize=1048576,nolock,local_lock=none,proto=tcp,sec=sys,_netdev
      state: mounted
    when: use_uhp|bool
  - name: set nfsshare permissions
    become: true
    file:
      path: "{{ mount_point }}/uhp_v4"
      state: directory
      owner: opc
      group: opc
    async: 30
    poll: 0
    when: use_uhp|bool

  - name: create nfs mount_point directory
    become: true
    file:
      path: "{{ mount_point }}/disk2"
      state: directory
    when: use_non_uhp_fs2|bool
  - name: Mount NFSv3
    mount:
      path: "{{ mount_point }}/disk2"
      src: "{{ nfs_server_ip }}:{{ fs2_dir }}/exports"
      fstype: nfs
      opts: vers=3,defaults,noatime,nodiratime,bg,timeo=100,ac,actimeo=120,nocto,rsize=1048576,wsize=1048576,nolock,local_lock=none,proto=tcp,sec=sys,_netdev
      state: mounted
    when: use_non_uhp_fs2|bool
  - name: set nfsshare permissions
    become: true
    file:
      path: "{{ mount_point }}/disk2"
      state: directory
      owner: opc
      group: opc
    async: 30
    poll: 0
    when: use_non_uhp_fs2|bool
  - name: create nfs mount_point directory
    become: true
    file:
      path: "{{ mount_point }}/disk2_v4"
      state: directory
    when: use_non_uhp_fs2|bool
  - name: Mount NFSv4
    mount:
      path: "{{ mount_point }}/disk2_v4"
      src: "{{ nfs_server_ip }}:{{ fs2_dir }}/exports"
      fstype: nfs
      opts: vers=4,defaults,noatime,nodiratime,bg,timeo=100,ac,actimeo=120,nocto,rsize=1048576,wsize=1048576,nolock,local_lock=none,proto=tcp,sec=sys,_netdev
      state: mounted
    when: use_non_uhp_fs2|bool
  - name: set nfsshare permissions
    become: true
    file:
      path: "{{ mount_point }}/disk2_v4"
      state: directory
      owner: opc
      group: opc
    async: 30
    poll: 0
    when: use_non_uhp_fs2|bool

  - name: create nfs mount_point directory
    become: true
    file:
      path: "{{ mount_point }}/disk3"
      state: directory
    when: use_non_uhp_fs3|bool
  - name: Mount NFSv3
    mount:
      path: "{{ mount_point }}/disk3"
      src: "{{ nfs_server_ip }}:{{ fs3_dir }}/exports"
      fstype: nfs
      opts: vers=3,defaults,noatime,nodiratime,bg,timeo=100,ac,actimeo=120,nocto,rsize=1048576,wsize=1048576,nolock,local_lock=none,proto=tcp,sec=sys,_netdev
      state: mounted
    when: use_non_uhp_fs3|bool
  - name: set nfsshare permissions
    become: true
    file:
      path: "{{ mount_point }}/disk3"
      state: directory
      owner: opc
      group: opc
    async: 30
    poll: 0
    when: use_non_uhp_fs3|bool
  - name: create nfs mount_point directory
    become: true
    file:
      path: "{{ mount_point }}/disk3_v4"
      state: directory
    when: use_non_uhp_fs3|bool
  - name: Mount NFSv4
    mount:
      path: "{{ mount_point }}/disk3_v4"
      src: "{{ nfs_server_ip }}:{{ fs3_dir }}/exports"
      fstype: nfs
      opts: vers=4,defaults,noatime,nodiratime,bg,timeo=100,ac,actimeo=120,nocto,rsize=1048576,wsize=1048576,nolock,local_lock=none,proto=tcp,sec=sys,_netdev
      state: mounted
    when: use_non_uhp_fs3|bool
  - name: set nfsshare permissions
    become: true
    file:
      path: "{{ mount_point }}/disk3_v4"
      state: directory
      owner: opc
      group: opc
    async: 30
    poll: 0
    when: use_non_uhp_fs3|bool